{"version":3,"sources":["components/Navbar.js","components/screens/Loader.js","components/screens/Home.js","components/screens/Login.js","components/screens/Profile.js","components/screens/UserProfile.js","components/screens/ViewPost.js","components/screens/Signup.js","components/screens/CreatePost.js","components/screens/UpdatePost.js","components/screens/SubscribesUserPosts.js","components/screens/Reset.js","components/screens/NewPassword.js","reducers/userReducer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","SearchModal","useRef","useState","search","setSearch","userDetails","setUserDetails","useContext","UserContext","state","dispatch","history","useHistory","useEffect","sidenav","document","querySelector","M","Sidenav","init","elems","querySelectorAll","Modal","renderList","key","data-target","className","style","color","to","onClick","localStorage","clear","type","push","href","id","ref","placeholder","value","onChange","e","query","target","fetch","method","headers","body","JSON","stringify","then","res","json","result","user","catch","err","console","log","map","item","_id","getInstance","current","close","width","height","borderRadius","src","pic","display","position","bottom","left","name","Loader","padding","Home","data","setData","getItem","posts","length","postedBy","alt","float","postid","newData","filter","photo","likes","includes","postId","title","comments","comment","fontWeight","text","cursor","commentid","post","onSubmit","preventDefault","Login","password","setPassword","email","setEmail","test","error","toast","html","classes","setItem","token","payload","Profile","mypics","setPics","image","setImage","Authorization","mypost","FormData","append","url","margin","borderBottom","followers","following","file","files","UserProfile","userProfile","setProfile","userid","useParams","showfollow","setShowFollow","followId","prevState","unfollowId","newFollower","ViewPost","deletePost","deleteComment","Signup","setName","undefined","setUrl","uploadFiels","message","PostData","uploadPic","CreatPost","setTitle","setBody","maxWidth","textAlign","postDetails","UpdatePost","updateClick","setupdateClick","Reset","NewPassword","massage","reducer","action","createContext","Routing","parse","location","pathname","startsWith","path","exact","CreatePost","SubscribesUserPosts","App","useReducer","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yQA6GeA,EAxGA,WACX,IAAMC,EAAcC,iBAAO,MADV,EAEWC,qBAFX,mBAEVC,EAFU,KAEFC,EAFE,OAGqBF,mBAAS,IAH9B,mBAGVG,EAHU,KAGGC,EAHH,OAIWC,qBAAWC,GAA/BC,EAJS,EAITA,MAAOC,EAJE,EAIFA,SACTC,EAAUC,cAChBC,qBAAU,WACN,IAAIC,EAAUC,SAASC,cAAc,cACrCC,IAAEC,QAAQC,KAAKL,EAAS,IACxB,IAAIM,EAAQL,SAASM,iBAAiB,UACtCJ,IAAEK,MAAMH,KAAKC,EAAO,MACrB,IACH,IAAMG,EAAa,WACf,OAAId,EACO,CACH,wBAAIe,IAAI,KAAI,uBAAGC,cAAY,SAASC,UAAU,yCAAyCC,MAAO,CAAEC,MAAO,UAA3F,WACZ,wBAAIJ,IAAI,KAAI,kBAAC,IAAD,CAAMK,GAAG,YAAT,YACZ,wBAAIL,IAAI,KAAI,kBAAC,IAAD,CAAMK,GAAG,WAAT,eACZ,wBAAIL,IAAI,KAAI,kBAAC,IAAD,CAAMK,GAAG,oBAAT,uBACZ,wBAAIL,IAAI,KAAI,4BAAQE,UAAU,2BAC1BI,QAAS,WACLC,aAAaC,QACbtB,EAAS,CAAEuB,KAAM,UACjBtB,EAAQuB,KAAK,YAJT,YAWT,CACH,wBAAIV,IAAI,KAAI,kBAAC,IAAD,CAAMK,GAAG,WAAT,WACZ,wBAAIL,IAAI,KAAI,kBAAC,IAAD,CAAMK,GAAG,UAAT,YA0BxB,OACI,oCACI,6BACI,yBAAKH,UAAU,qBACX,kBAAC,IAAD,CAAMG,GAAIpB,EAAQ,IAAM,SAAUiB,UAAU,mBAA5C,mBACA,uBAAGS,KAAK,IAAIV,cAAY,YAAYC,UAAU,qCAAoC,uBAAGA,UAAU,kBAAb,SAClF,wBAAIU,GAAG,aAAaV,UAAU,8BACzBH,OAIb,wBAAIa,GAAG,YAAYV,UAAU,WACxBH,KAEL,yBAAKa,GAAG,SAASV,UAAU,QAAQW,IAAKrC,EAAa2B,MAAO,CAAEC,MAAO,UACjE,yBAAKF,UAAU,iBACX,2BACIO,KAAK,OACLK,YAAY,wBACZC,MAAOpC,EACPqC,SAAU,SAACC,GAAD,OAzCVC,EAyC4BD,EAAEE,OAAOJ,MAxCrDnC,EAAUsC,QACPA,GACCE,MAAM,gBAAiB,CACnBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBP,YAELQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF/C,EAAe+C,EAAOC,SACvBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAfT,IAACd,KA2CJ,wBAAIhB,UAAU,cACTrB,EAAYsD,KAAI,SAAAC,GACb,OAAQ,kBAAC,IAAD,CAAMpC,IAAKoC,EAAKC,IAAKhC,GAAI+B,EAAKC,MAAQpD,EAAMoD,IAAnB,mBAAqCD,EAAKC,KAAQ,YAC/E/B,QAAS,WACLb,IAAEK,MAAMwC,YAAY9D,EAAY+D,SAASC,QACzC5D,EAAU,MAEd,wBAAIsB,UAAU,mBACd,yBAAKC,MAAO,CAAEsC,MAAO,OAAQC,OAAQ,OAAQC,aAAc,QACvDC,IAAKR,EAAKS,MACd,0BAAM1C,MAAO,CAAE2C,QAAS,eAAgBC,SAAU,WAAYC,OAAQ,OAAQC,KAAM,SAAYb,EAAKc,aAMrH,yBAAKhD,UAAU,gBACX,4BAAQA,UAAU,gDAAgDI,QAAS,SAACW,GAAD,OAAOrC,EAAU,MAA5F,aC/ELuE,G,MAtBA,WACX,OACI,yBAAKjD,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UAAUC,MAAO,CAACiD,QAAQ,aACrC,yBAAKlD,UAAU,gCACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACjB,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wBACjB,yBAAKA,UAAU,mBCqKhCmD,EA7KF,WAAO,IAAD,EACS3E,mBAAS,IADlB,mBACR4E,EADQ,KACFC,EADE,OAEaxE,qBAAWC,GAA/BC,EAFO,EAEPA,MAFO,EAEAC,SACfG,qBAAU,WACN+B,MAAM,WAAY,CACdE,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAEvD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF0B,EAAQ1B,EAAO4B,YAExB,IA0GH,OACI,yBAAKvD,UAAU,QAEQ,GAAfoD,EAAKI,OAAc,kBAAC,EAAD,MACnBJ,EAAKnB,KAAI,SAAAC,GACL,OACI,yBAAKlC,UAAU,iBAAiBF,IAAKoC,EAAKC,KACtC,wBAAIlC,MAAO,CAAEiD,QAAS,QAAtB,IAAgC,kBAAC,IAAD,CAAM/C,GAAI+B,EAAKuB,SAAStB,MAAQpD,EAAMoD,IAA5B,mBAA8CD,EAAKuB,SAAStB,KAAQ,aAC1G,yBAAKlC,MAAO,CAAEsC,MAAO,OAAQC,OAAQ,OAAQC,aAAc,QACvDC,IAAKR,EAAKuB,SAASd,IAAKe,IAAMxB,EAAKuB,SAAST,KAAK,mBACrD,0BAAM/C,MAAO,CAAE2C,QAAS,eAAgBC,SAAU,WAAYC,OAAQ,OAAQC,KAAM,SAAYb,EAAKuB,SAAST,OAE7Gd,EAAKuB,SAAStB,KAAOpD,EAAMoD,KAAO,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAE0D,MAAO,SAC7EvD,QAAS,WA/CtB,IAACwD,IA+CwC1B,EAAKC,IA9C7DjB,MAAM,eAAD,OAAgB0C,GAAU,CAC3BzC,OAAQ,SACRC,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAGrD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAMkC,EAAUT,EAAKU,QAAO,SAAA5B,GACxB,OAAOA,EAAKC,MAAQR,EAAOQ,OAE/BkB,EAAQQ,MACThC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAiC2B,kBAElCI,EAAKuB,SAAStB,KAAOpD,EAAMoD,KAAO,kBAAC,IAAD,CAAMhC,GAAE,sBAAiB+B,EAAKC,MAAO,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAE0D,MAAO,UAA9C,cAE5E,yBAAK3D,UAAU,cACX,yBAAK0C,IAAKR,EAAK6B,MAAOL,IAAK,iBAAkBxB,EAAKuB,SAAST,QAE/D,yBAAKhD,UAAU,gBACVkC,EAAK8B,MAAMC,SAASlF,EAAMoD,KACrB,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAEC,MAAO,OAC5CE,QAAS,WAvG1B,IAACM,IAuG4CwB,EAAKC,IAtGjEjB,MAAM,SAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYf,aAAaiD,QAAQ,QAEtDjC,KAAMC,KAAKC,UAAU,CACjB2C,OAAQxD,MAEbc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF,IAAMkC,EAAUT,EAAKnB,KAAI,SAAAC,GACrB,OAAIA,EAAKC,MAAQR,EAAOQ,IACbR,EAEAO,KAGfmB,EAAQQ,MACThC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAkFF,YAEA,uBAAG9B,UAAU,iBAAiBC,MAAO,CAAEC,MAAO,OAC5CE,QAAS,WAhI5B,IAACM,IAgI4CwB,EAAKC,IA/H/DjB,MAAM,OAAQ,CACVC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYf,aAAaiD,QAAQ,QAEtDjC,KAAMC,KAAKC,UAAU,CACjB2C,OAAQxD,MAEbc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF,IAAMkC,EAAUT,EAAKnB,KAAI,SAAAC,GACrB,OAAIA,EAAKC,MAAQR,EAAOQ,IACbR,EAEAO,KAGfmB,EAAQQ,MACThC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QA2GF,mBAGN,4BAAKI,EAAK8B,MAAMR,OAAhB,UACA,4BAAI,2BAAItB,EAAKiC,QACb,2BAAIjC,EAAKb,MAELa,EAAKkC,SAASnC,KAAI,SAAAoC,GACd,OAAQ,wBAAIvE,IAAKuE,EAAQlC,KACrB,0BAAMlC,MAAO,CAAEqE,WAAY,QAAUD,EAAQZ,SAAST,MADlD,IACgEqB,EAAQE,KAC1EF,EAAQZ,SAAStB,KAAOpD,EAAMoD,IAAM,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAEuE,OAAQ,UAAWb,MAAO,SACnGvD,QAAS,WArD/B,IAACwD,EAAQa,EAARb,EAqDoD1B,EAAKC,IArDjDsC,EAqDsDJ,EAAQlC,IApDzFjB,MAAM,kBAAD,OAAmB0C,EAAnB,YAA6Ba,GAAa,CAC3CtD,OAAQ,SACRC,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAGrD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAMkC,EAAUT,EAAKnB,KAAI,SAAAC,GACrB,OAAIA,EAAKC,MAAQR,EAAO+C,KAAKvC,IAClBR,EAAO+C,KAEPxC,KAGfmB,EAAQQ,MACThC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAmC0C,kBAC4C,OAI9F,0BAAM6C,SAAU,SAAC5D,GAhGzB,IAACwD,EAAML,EAiGKnD,EAAE6D,iBAjGbL,EAkGuBxD,EAAEE,OAAO,GAAGJ,MAlG7BqD,EAkGoChC,EAAKC,IAjGhEjB,MAAM,WAAY,CACdC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYf,aAAaiD,QAAQ,QAEtDjC,KAAMC,KAAKC,UAAU,CACjB2C,SACAK,WAEL/C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF,IAAMkC,EAAUT,EAAKnB,KAAI,SAAAC,GACrB,OAAIA,EAAKC,MAAQR,EAAOQ,IACbR,EAEAO,KAGfmB,EAAQQ,MACThC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MA8EJf,EAAEE,OAAO,GAAGJ,MAAQ,KAEpB,2BAAON,KAAK,OAAOK,YAAY,wB,gBC7FpDiE,EApED,WAAO,IAAD,EACShG,qBAAWC,GAAvBE,GADG,EACTD,MADS,EACHC,UACPC,EAAUC,cAFA,EAGeV,mBAAS,IAHxB,mBAGTsG,EAHS,KAGAC,EAHA,OAISvG,mBAAS,IAJlB,mBAITwG,EAJS,KAIHC,EAJG,KAqChB,OACI,yBAAKjF,UAAU,UACX,yBAAKA,UAAU,8BACf,+CACA,2BACAO,KAAK,OACLK,YAAY,QACZC,MAAOmE,EACPlE,SAAU,SAACC,GAAD,OAAKkE,EAASlE,EAAEE,OAAOJ,UAEjC,2BACAN,KAAK,WACLK,YAAY,WACZC,MAAOiE,EACPhE,SAAU,SAACC,GAAD,OAAKgE,EAAYhE,EAAEE,OAAOJ,UAEpC,4BAAQb,UAAU,iCAClBI,QAAS,WAhDT,yJAAyJ8E,KAAKF,GAIlK9D,MAAM,SAAU,CACZC,OAAO,OACPC,QAAQ,CACJ,eAAe,oBAEnBC,KAAKC,KAAKC,UAAU,CAChBuD,WACAE,YAGLxD,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAA4B,GACCA,EAAK+B,MACJ5F,IAAE6F,MAAM,CAACC,KAAMjC,EAAK+B,MAAMG,QAAQ,0BAGlCjF,aAAakF,QAAQ,MAAMnC,EAAKoC,OAChCnF,aAAakF,QAAQ,OAAOjE,KAAKC,UAAU6B,EAAKxB,OAChD5C,EAAS,CAACuB,KAAK,OAAOkF,QAAQrC,EAAKxB,OACnCrC,IAAE6F,MAAM,CAACC,KAAK,mBAAmBC,QAAQ,2BACzCrG,EAAQuB,KAAK,SAElBqB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MA1BZvC,IAAE6F,MAAM,CAACC,KAAM,gBAAgBC,QAAQ,2BA8CvC,SAIA,4BACI,kBAAC,IAAD,CAAMnF,GAAG,WAAT,6BAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,UAAT,0B,OC6DDuF,EA3HC,WAAO,IAAD,EACQlH,mBAAS,IADjB,mBACXmH,EADW,KACHC,EADG,OAEU/G,qBAAWC,GAA/BC,EAFU,EAEVA,MAAOC,EAFG,EAEHA,SAFG,EAGQR,mBAAS,IAHjB,mBAGXqH,EAHW,KAGJC,EAHI,KAIlB3G,qBAAU,WACN+B,MAAM,UAAW,CACbE,QAAS,CACL2E,cAAe,UAAY1F,aAAaiD,QAAQ,UAGnD9B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHiE,EAAQjE,EAAOqE,aAExB,IACH7G,qBAAU,WACN,GAAI0G,EAAO,CACP,IAAMzC,EAAO,IAAI6C,SACjB7C,EAAK8C,OAAO,OAAQL,GACpBzC,EAAK8C,OAAO,gBAAiB,eAC7B9C,EAAK8C,OAAO,aAAc,eAC1BhF,MAAM,6DAA6D,CAC/DC,OAAQ,OACRE,KAAM+B,IAEL5B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC4B,GACHlC,MAAM,aAAc,CAChBC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB2E,cAAe,UAAY1F,aAAaiD,QAAQ,QAEpDjC,KAAMC,KAAKC,UAAU,CACjBoB,IAAKS,EAAK+C,QAGb3E,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHtB,aAAakF,QAAQ,OAAQjE,KAAKC,UAAL,2BAAoBxC,GAApB,IAA2B4D,IAAKhB,EAAOgB,QACpE3D,EAAS,CAAEuB,KAAM,YAAakF,QAAS9D,EAAOgB,YAIzDd,OAAM,SAACC,GACJC,QAAQC,IAAIF,SAGzB,CAAC+D,IAKJ,OACI,yBAAK7F,UAAU,aACX,yBAAKC,MAAO,CAAEmG,OAAQ,WAAYC,aAAc,mBAC5C,yBAAKrG,UAAU,OACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,2BACX,yBACIA,UAAU,wBACVuC,MAAM,OACNG,IAAK3D,EAAQA,EAAM4D,IAAM,GACzBe,IAAK3E,EAAMiE,KAAO,cAG1B,yBAAKhD,UAAU,eACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,WACX,4BAAKjB,EAAQA,EAAMiE,KAAO,YAG9B,yBAAKhD,UAAU,WACX,4BAAKjB,EAAQA,EAAMiG,MAAQ,YAI/B,yBAAKhF,UAAU,aACX,4BAAK2F,EAASA,EAAOnC,OAAS,EAA9B,WAEJ,yBAAKxD,UAAU,aACX,4BAAKjB,EAAQA,EAAMuH,UAAU9C,OAAS,EAAtC,eAEJ,yBAAKxD,UAAU,aACX,4BAAKjB,EAAQA,EAAMwH,UAAU/C,OAAS,EAAtC,kBAOhB,yBAAKxD,UAAU,yBAAyBC,MAAO,CAAEmG,OAAQ,SACrD,yBAAKpG,UAAU,qBACX,4CACA,2BACIO,KAAK,OACLO,SAAU,SAACC,GAAD,OA9CbyF,EA8CgCzF,EAAEE,OAAOwF,MAAM,QA7ChEX,EAASU,GADO,IAACA,MAiDL,yBAAKxG,UAAU,qBACX,2BAAOA,UAAU,qBAAqBO,KAAK,YAIvD,yBAAKP,UAAU,oBACV2F,EAAO1D,KAAI,SAACC,GACT,OACI,yBAAKlC,UAAU,aAAaF,IAAKoC,EAAKC,KAClC,kBAAC,IAAD,CAAMhC,GAAE,gBAAW+B,EAAKC,MACxB,yBACInC,UAAU,iBACV0C,IAAKR,EAAK6B,MACVL,IAAKxB,EAAKiC,gB,QC4B3BuC,EA3IK,WAAO,IAAD,EACYlI,mBAAS,MADrB,mBACfmI,EADe,KACFC,EADE,OAEM/H,qBAAWC,GAA/BC,EAFc,EAEdA,MAAOC,EAFO,EAEPA,SACP6H,EAAWC,cAAXD,OAHc,EAIcrI,oBAASO,IAASA,EAAMwH,UAAUtC,SAAS4C,IAJzD,mBAIfE,EAJe,KAIHC,EAJG,KAMtB7H,qBAAU,WACN+B,MAAM,SAAD,OAAU2F,GAAU,CACrBzF,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAEvD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACFiF,EAAWjF,QAEpB,IAoDH,OACI,oCACKgF,EACG,yBAAK3G,UAAU,aACX,yBAAKC,MAAO,CAAEmG,OAAQ,WAAYC,aAAc,mBAC5C,yBAAKrG,UAAU,OACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,wBAAwBuC,MAAM,OACzCG,IAAKiE,EAAY/E,KAAKe,IAAKe,IAAKiD,EAAY/E,KAAKoB,KAAO,cAEhE,yBAAKhD,UAAU,eACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,WACX,4BAAK2G,EAAY/E,KAAKoB,OAG1B,yBAAKhD,UAAU,WACX,4BAAK2G,EAAY/E,KAAKoD,QAI1B,yBAAKhF,UAAU,aACX,4BAAK2G,EAAYpD,MAAMC,OAAvB,WAEJ,yBAAKxD,UAAU,aACX,4BAAK2G,EAAY/E,KAAK0E,UAAU9C,OAAhC,eAEJ,yBAAKxD,UAAU,aACX,4BAAK2G,EAAY/E,KAAK2E,UAAU/C,OAAhC,gBAGR,yBAAKxD,UAAU,WACV+G,EACG,4BAAQ9G,MAAO,CAAEmG,OAAQ,QAAUpG,UAAU,iCACzCI,QAAS,WApF7Cc,MAAM,UAAW,CACbC,OAAQ,MACRC,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,OAClD,eAAgB,oBAEpBjC,KAAMC,KAAKC,UAAU,CAAE0F,SAAUJ,MAClCrF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAA4B,GACFpE,EAAS,CAAEuB,KAAM,SAAUkF,QAAS,CAAEc,UAAWnD,EAAKmD,UAAWD,UAAWlD,EAAKkD,aACjFjG,aAAakF,QAAQ,OAAQjE,KAAKC,UAAU6B,IAC5CwD,GAAW,SAACM,GACR,OAAO,2BACAA,GADP,IAEItF,KAAK,2BACEsF,EAAUtF,MADb,IAEA0E,UAAU,GAAD,mBAAMY,EAAUtF,KAAK0E,WAArB,CAAgClD,EAAKjB,aAI1D6E,GAAc,QA+DU,UAIA,4BAAQ/G,MAAO,CAAEmG,OAAQ,QAAUpG,UAAU,iCACzCI,QAAS,WA/D7Cc,MAAM,YAAa,CACfC,OAAQ,MACRC,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,OAClD,eAAgB,oBAEpBjC,KAAMC,KAAKC,UAAU,CAAE4F,WAAYN,MACpCrF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAA4B,GACFpE,EAAS,CAAEuB,KAAM,SAAUkF,QAAS,CAAEc,UAAWnD,EAAKmD,UAAWD,UAAWlD,EAAKkD,aACjFjG,aAAakF,QAAQ,OAAQjE,KAAKC,UAAU6B,IAC5CwD,GAAW,SAACM,GACR,IAAME,EAAcF,EAAUtF,KAAK0E,UAAUxC,QAAO,SAAA5B,GAAI,OAAIA,IAASkB,EAAKjB,OAC1E,OAAO,2BACA+E,GADP,IAEItF,KAAK,2BACEsF,EAAUtF,MADb,IAEA0E,UAAWc,SAIvBJ,GAAc,QAyCU,gBAUpB,yBAAKhH,UAAU,oBAEP2G,EAAYpD,MAAMtB,KAAI,SAAAC,GAClB,OACI,yBAAKlC,UAAU,aAAaF,IAAKoC,EAAKC,KAClC,kBAAC,IAAD,CAAMhC,GAAE,gBAAW+B,EAAKC,MACpB,yBACInC,UAAU,iBACV0C,IAAKR,EAAK6B,MACVL,IAAKxB,EAAKiC,eASxC,kBAAC,EAAD,QCaHkD,EAjJE,WAAO,IAAD,EACK7I,mBAAS,MADd,mBACZ4E,EADY,KACNC,EADM,KAEXO,EAAWkD,cAAXlD,OAFW,EAGS/E,qBAAWC,GAA/BC,EAHW,EAGXA,MAHW,EAGJC,SACfG,qBAAU,WACN+B,MAAM,SAAD,OAAU0C,GAAU,CACrBxC,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAEvD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF0B,EAAQ1B,EAAO+C,WAExB,IA2EH,OACI,oCACCtB,EACD,yBAAKpD,UAAU,QAEP,yBAAKA,UAAU,kBACX,wBAAIC,MAAO,CAAEiD,QAAS,QAAtB,IAAgC,kBAAC,IAAD,CAAM/C,GAAIiD,EAAKK,SAAStB,MAAQpD,EAAMoD,IAA5B,mBAA8CiB,EAAKK,SAAStB,KAAQ,aAC1G,yBAAKlC,MAAO,CAAEsC,MAAO,OAAQC,OAAQ,OAAQC,aAAc,QACvDC,IAAKU,EAAKK,SAASd,MACvB,0BAAM1C,MAAO,CAAE2C,QAAS,eAAgBC,SAAU,WAAYC,OAAQ,OAAQC,KAAM,SAAYK,EAAKK,SAAST,OAEjHI,EAAKK,SAAStB,KAAOpD,EAAMoD,KAAO,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAE0D,MAAO,SACzEvD,QAAS,YApCd,SAACwD,GAChB1C,MAAM,eAAD,OAAgB0C,GAAU,CAC3BzC,OAAQ,SACRC,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAGrD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF0B,EAAQ1B,MACTE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MA0BKwF,CAAWlE,EAAKjB,OADN,kBAElCiB,EAAKK,SAAStB,KAAOpD,EAAMoD,KAAO,kBAAC,IAAD,CAAMhC,GAAE,sBAAiBiD,EAAKjB,MAAO,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAE0D,MAAO,UAA9C,cAGxE,yBAAK3D,UAAU,cACX,yBAAK0C,IAAKU,EAAKW,SAEnB,yBAAK/D,UAAU,gBAEVoD,EAAKY,MAAMC,SAASlF,EAAMoD,KACrB,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAEC,MAAO,OAC5CE,QAAS,WAhFlB,IAACM,IAgFoC0C,EAAKjB,IA/EzDjB,MAAM,UAAW,CACbC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYf,aAAaiD,QAAQ,QAEtDjC,KAAMC,KAAKC,UAAU,CACjB2C,OAAQxD,MAEbc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF0B,EAAQ1B,MACTE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAkEV,YAEA,uBAAG9B,UAAU,iBAAiBC,MAAO,CAAEC,MAAO,OAC5CE,QAAS,WAlGpB,IAACM,IAkGoC0C,EAAKjB,IAjGvDjB,MAAM,QAAS,CACXC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYf,aAAaiD,QAAQ,QAEtDjC,KAAMC,KAAKC,UAAU,CACjB2C,OAAQxD,MAEbc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF0B,EAAQ1B,MACTE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAoFV,mBAGN,4BAAKsB,EAAKY,MAAMR,OAAhB,UACA,4BAAI,2BAAIJ,EAAKe,QACb,2BAAIf,EAAK/B,MAEL+B,EAAKgB,SAASnC,KAAI,SAAAoC,GACd,OAAQ,wBAAIvE,IAAKuE,EAAQlC,KACrB,0BAAMlC,MAAO,CAAEqE,WAAY,QAAUD,EAAQZ,SAAST,MADlD,IACgEqB,EAAQE,KAC1EF,EAAQZ,SAAStB,KAAOpD,EAAMoD,IAAM,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAEuE,OAAQ,UAAWb,MAAO,SACnGvD,QAAS,YA/CvB,SAACwD,EAAQa,GAC3BvD,MAAM,kBAAD,OAAmB0C,EAAnB,YAA6Ba,GAAa,CAC3CtD,OAAQ,SACRC,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAGrD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF0B,EAAQ1B,MACTE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAqCiByF,CAAcnE,EAAKjB,IAAKkC,EAAQlC,OADf,kBAC4C,OAI9F,0BAAMwC,SAAU,SAAC5D,GAhFjB,IAACwD,EAAML,EAiFHnD,EAAE6D,iBAjFLL,EAkFexD,EAAEE,OAAO,GAAGJ,MAlFrBqD,EAkF4Bd,EAAKjB,IAjFxDjB,MAAM,WAAY,CACdC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYf,aAAaiD,QAAQ,QAEtDjC,KAAMC,KAAKC,UAAU,CACjB2C,SACAK,WAEL/C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF0B,EAAQ1B,MACTE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAqEZf,EAAEE,OAAO,GAAGJ,MAAQ,KAEpB,2BAAON,KAAK,OAAOK,YAAY,oBAOlD,kBAAC,EAAD,QC3BM4G,EAlHA,WACX,IAAMvI,EAAUC,cADC,EAEMV,mBAAS,IAFf,mBAEVwE,EAFU,KAELyE,EAFK,OAGcjJ,mBAAS,IAHvB,mBAGVsG,EAHU,KAGDC,EAHC,OAIQvG,mBAAS,IAJjB,mBAIVwG,EAJU,KAIJC,EAJI,OAKQzG,mBAAS,IALjB,mBAKVqH,EALU,KAKJC,EALI,OAMItH,wBAASkJ,GANb,mBAMVvB,EANU,KAMNwB,EANM,KAOjBxI,qBAAU,WACHgH,GACCyB,MAEN,CAACzB,IACH,IAkBMyB,EAAc,WACZ,yJAAyJ1C,KAAKF,GAIlK9D,MAAM,UAAW,CACbC,OAAO,OACPC,QAAQ,CACJ,eAAe,oBAEnBC,KAAKC,KAAKC,UAAU,CAChByB,OACA8B,WACAE,QACArC,IAAIwD,MAGT3E,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAA4B,GACCA,EAAK+B,MACJ5F,IAAE6F,MAAM,CAACC,KAAMjC,EAAK+B,MAAMG,QAAQ,0BAGlC/F,IAAE6F,MAAM,CAACC,KAAKjC,EAAKyE,QAAQvC,QAAQ,2BACnCrG,EAAQuB,KAAK,cAElBqB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAzBZvC,IAAE6F,MAAM,CAACC,KAAM,gBAAgBC,QAAQ,0BA6BzCwC,EAAU,WACTjC,EAlDW,WACV,IAAMzC,EAAO,IAAI6C,SACjB7C,EAAK8C,OAAO,OAAOL,GACnBzC,EAAK8C,OAAO,gBAAgB,eAC5B9C,EAAK8C,OAAO,aAAa,eACzBhF,MAAM,6DAA4D,CAC9DC,OAAO,OACPE,KAAK+B,IAER5B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAA4B,GACFuE,EAAOvE,EAAK+C,QAEftE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAqChBiG,GAEAH,KAKR,OACI,yBAAK5H,UAAU,UACX,yBAAKA,UAAU,8BACf,+CACA,2BACAO,KAAK,OACLK,YAAY,OACZC,MAAOmC,EACPlC,SAAU,SAACC,GAAD,OAAK0G,EAAQ1G,EAAEE,OAAOJ,UAEhC,2BACAN,KAAK,OACLK,YAAY,QACZC,MAAOmE,EACPlE,SAAU,SAACC,GAAD,OAAKkE,EAASlE,EAAEE,OAAOJ,UAEjC,2BACAN,KAAK,WACLK,YAAY,WACZC,MAAOiE,EACPhE,SAAU,SAACC,GAAD,OAAKgE,EAAYhE,EAAEE,OAAOJ,UAEpC,yBAAKb,UAAU,0BACX,yBAAKA,UAAU,qBACX,4CACA,2BAAOO,KAAK,OAAOO,SAAU,SAACC,GAAD,OAAK+E,EAAS/E,EAAEE,OAAOwF,MAAM,QAE9D,yBAAKzG,UAAU,qBACX,2BAAOA,UAAU,qBAAqBO,KAAK,WAGnD,4BAAQP,UAAU,iCAClBI,QAAS,kBAAI0H,MADb,UAKA,4BACI,kBAAC,IAAD,CAAM3H,GAAG,UAAT,kCClBD6H,EAzFG,WACd,IAAM/I,EAAUC,cADI,EAEMV,mBAAS,IAFf,mBAEb2F,EAFa,KAEN8D,EAFM,OAGIzJ,mBAAS,IAHb,mBAGb6C,EAHa,KAGP6G,EAHO,OAIM1J,mBAAS,IAJf,mBAIbqH,EAJa,KAINC,EAJM,OAKCtH,mBAAS,IALV,mBAKb2H,EALa,KAKTwB,EALS,KAOpBxI,qBAAU,WACHgH,GACCjF,MAAM,cAAe,CACjBC,OAAO,OACPC,QAAQ,CACJ,eAAe,mBACf,cAAgB,UAAUf,aAAaiD,QAAQ,QAEnDjC,KAAKC,KAAKC,UAAU,CAChB4C,QACA9C,OACAsB,IAAIwD,MAGT3E,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAA4B,GACCA,EAAK+B,MACJ5F,IAAE6F,MAAM,CAACC,KAAMjC,EAAK+B,MAAMG,QAAQ,0BAGlC/F,IAAE6F,MAAM,CAACC,KAAK,4BAA4BC,QAAQ,2BAClDrG,EAAQuB,KAAK,SAElBqB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAGtB,CAACqE,IAmBH,OACI,yBACInG,UAAU,mBACVC,MAAO,CACHmG,OAAQ,YACR+B,SAAU,QACVjF,QAAS,OACTkF,UAAW,WAGf,2BACI7H,KAAK,OACLK,YAAY,QACZC,MAAOsD,EACPrD,SAAU,SAACC,GAAD,OAAOkH,EAASlH,EAAEE,OAAOJ,UAEvC,2BACIN,KAAK,OACLK,YAAY,OACZC,MAAOQ,EACPP,SAAU,SAACC,GAAD,OAAOmH,EAAQnH,EAAEE,OAAOJ,UAEtC,yBAAKb,UAAU,0BACX,yBAAKA,UAAU,qBACX,8CACA,2BAAOO,KAAK,OAAOO,SAAU,SAACC,GAAD,OAAK+E,EAAS/E,EAAEE,OAAOwF,MAAM,QAE9D,yBAAKzG,UAAU,qBACX,2BAAOA,UAAU,qBAAqBO,KAAK,WAGnD,4BAAQP,UAAU,iCAAiCI,QAAS,kBAhDhD,WAChB,IAAMgD,EAAO,IAAI6C,SACjB7C,EAAK8C,OAAO,OAAOL,GACnBzC,EAAK8C,OAAO,gBAAgB,eAC5B9C,EAAK8C,OAAO,aAAa,eACzBhF,MAAM,6DAA4D,CAC9DC,OAAO,OACPE,KAAK+B,IAER5B,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAA4B,GACFuE,EAAOvE,EAAK+C,QAEftE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAkCoDuG,KAAhE,iBC4BGC,EAhHI,WACf,IAAMrJ,EAAUC,cACR0E,EAAWkD,cAAXlD,OAFa,EAGKpF,mBAAS,IAHd,mBAGd2F,EAHc,KAGP8D,EAHO,OAIGzJ,mBAAS,IAJZ,mBAId6C,EAJc,KAIR6G,EAJQ,OAKK1J,mBAAS,IALd,mBAKdqH,EALc,KAKPC,EALO,OAMCtH,mBAAS,IANV,mBAMd2H,EANc,KAMTwB,EANS,OAOiBnJ,oBAAS,GAP1B,mBAOd+J,EAPc,KAODC,EAPC,KASrBrJ,qBAAU,WACN+B,MAAM,SAAD,OAAU0C,GAAU,CACrBxC,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAEvD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACFsG,EAAStG,EAAO+C,KAAKP,OACrB+D,EAAQvG,EAAO+C,KAAKrD,MACpBsG,EAAOhG,EAAO+C,KAAKX,YAG5B,IAEH5E,qBAAU,WACFoJ,GACArH,MAAM,eAAD,OAAgB0C,GAAU,CAC3BzC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYf,aAAaiD,QAAQ,QAEtDjC,KAAMC,KAAKC,UAAU,CACjB4C,QACA9C,OACAsB,IAAKwD,MAGV3E,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAA4B,GACEA,EAAK+B,MACL5F,IAAE6F,MAAM,CAAEC,KAAMjC,EAAK+B,MAAOG,QAAS,0BAGrC/F,IAAE6F,MAAM,CAAEC,KAAM,2BAA4BC,QAAS,2BACrDrG,EAAQuB,KAAR,gBAAsBoD,QAE3B/B,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAGzB,CAACyG,IAqBJ,OACI,yBACIvI,UAAU,mBACVC,MAAO,CACHmG,OAAQ,YACR+B,SAAU,QACVjF,QAAS,OACTkF,UAAW,WAGf,2BACI7H,KAAK,OACLK,YAAY,QACZC,MAAOsD,EACPrD,SAAU,SAACC,GAAD,OAAOkH,EAASlH,EAAEE,OAAOJ,UAEvC,2BACIN,KAAK,OACLK,YAAY,OACZC,MAAOQ,EACPP,SAAU,SAACC,GAAD,OAAOmH,EAAQnH,EAAEE,OAAOJ,UAEtC,yBAAKb,UAAU,kBACX,yBAAKA,UAAU,cACX,yBAAK0C,IAAKyD,EAAKzC,IAAI,iBAG3B,yBAAK1D,UAAU,0BACX,yBAAKA,UAAU,qBACX,8CACA,2BAAOO,KAAK,OAAOO,SAAU,SAACC,GAAD,OAAO+E,EAAS/E,EAAEE,OAAOwF,MAAM,QAEhE,yBAAKzG,UAAU,qBACX,2BAAOA,UAAU,qBAAqBO,KAAK,WAGnD,4BAAQP,UAAU,iCAAiCI,QAAS,kBAvDhD,WAChB,IAAMgD,EAAO,IAAI6C,SACjB7C,EAAK8C,OAAO,OAAQL,GACpBzC,EAAK8C,OAAO,gBAAiB,eAC7B9C,EAAK8C,OAAO,aAAc,eAC1BhF,MAAM,6DAA6D,CAC/DC,OAAQ,OACRE,KAAM+B,IAEL5B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA4B,GACFuE,EAAOvE,EAAK+C,KACZqC,GAAe,MAGlB3G,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAuCkDuG,KAAlE,iBCiEGlF,EA7KF,WAAO,IAAD,EACS3E,mBAAS,IADlB,mBACR4E,EADQ,KACFC,EADE,KAERtE,EAASF,qBAAWC,GAApBC,MACPI,qBAAU,WACN+B,MAAM,cAAe,CACjBE,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAEvD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF0B,EAAQ1B,EAAO4B,YAExB,IA0GH,OACI,yBAAKvD,UAAU,QACO,IAAhBoD,EAAKI,OAAe,wBAAIvD,MAAO,CAACmG,OAAO,OAAnB,4CAClBhD,EAAKnB,KAAI,SAAAC,GACL,OACI,yBAAKlC,UAAU,iBAAiBF,IAAKoC,EAAKC,KACtC,wBAAIlC,MAAO,CAACiD,QAAQ,QAApB,IAA6B,kBAAC,IAAD,CAAM/C,GAAI+B,EAAKuB,SAAStB,MAAQpD,EAAMoD,IAA5B,mBAA6CD,EAAKuB,SAAStB,KAAM,aACxG,yBAAKlC,MAAO,CAAEsC,MAAO,OAAQC,OAAQ,OAAQC,aAAc,QACvDC,IAAKR,EAAKuB,SAASd,IAAKe,IAAMxB,EAAKuB,SAAST,KAAK,mBACjD,0BAAM/C,MAAO,CAAC2C,QAAQ,eAAgBC,SAAU,WAAYC,OAAQ,OAAQC,KAAM,SAAWb,EAAKuB,SAAST,OAE9Gd,EAAKuB,SAAStB,MAAQpD,EAAMoD,KAAO,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAC0D,MAAM,SACpEvD,QAAS,WA9C3B,IAACwD,IA8C6C1B,EAAKC,IA7CjEjB,MAAM,eAAD,OAAgB0C,GAAS,CAC1BzC,OAAO,SACPC,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAGzD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAMkC,EAAUT,EAAKU,QAAO,SAAA5B,GACxB,OAAOA,EAAKC,MAAQR,EAAOQ,OAE/BkB,EAAQQ,MACThC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAgC4B,kBAE/BI,EAAKuB,SAAStB,MAAQpD,EAAMoD,KAAO,kBAAC,IAAD,CAAMhC,GAAE,sBAAiB+B,EAAKC,MAAO,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAE0D,MAAO,UAA9C,cAG7E,yBAAK3D,UAAU,cACX,yBAAK0C,IAAKR,EAAK6B,MAAOL,IAAK,iBAAkBxB,EAAKuB,SAAST,QAE/D,yBAAKhD,UAAU,gBACdkC,EAAK8B,MAAMC,SAASlF,EAAMoD,KACjB,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAEC,MAAO,OAC5CE,QAAS,WAvG1B,IAACM,IAuG4CwB,EAAKC,IAtGjEjB,MAAM,SAAU,CACZC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYf,aAAaiD,QAAQ,QAEtDjC,KAAMC,KAAKC,UAAU,CACjB2C,OAAQxD,MAEbc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF,IAAMkC,EAAUT,EAAKnB,KAAI,SAAAC,GACrB,OAAIA,EAAKC,MAAQR,EAAOQ,IACbR,EAEAO,KAGfmB,EAAQQ,MACThC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAkFF,YAEA,uBAAG9B,UAAU,iBAAiBC,MAAO,CAAEC,MAAO,OAC5CE,QAAS,WAhI5B,IAACM,IAgI4CwB,EAAKC,IA/H/DjB,MAAM,OAAQ,CACVC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYf,aAAaiD,QAAQ,QAEtDjC,KAAMC,KAAKC,UAAU,CACjB2C,OAAQxD,MAEbc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACF,IAAMkC,EAAUT,EAAKnB,KAAI,SAAAC,GACrB,OAAIA,EAAKC,MAAQR,EAAOQ,IACbR,EAEAO,KAGfmB,EAAQQ,MACThC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QA2GF,mBAGN,4BAAKI,EAAK8B,MAAMR,OAAhB,UACA,4BAAI,2BAAItB,EAAKiC,QACb,2BAAIjC,EAAKb,MAELa,EAAKkC,SAASnC,KAAI,SAAAoC,GACd,OAAO,wBAAIvE,IAAKuE,EAAQlC,KACpB,0BAAMlC,MAAO,CAACqE,WAAW,QAASD,EAAQZ,SAAST,MADhD,IAC8DqB,EAAQE,KACvEF,EAAQZ,SAAStB,MAAQpD,EAAMoD,IAAK,uBAAGnC,UAAU,iBAAiBC,MAAO,CAAEuE,OAAQ,UAAWb,MAAM,SAC1GvD,QAAS,WArDxB,IAACwD,EAAOa,EAAPb,EAqD6C1B,EAAKC,IArD3CsC,EAqD+CJ,EAAQlC,IApDhFjB,MAAM,kBAAD,OAAmB0C,EAAnB,YAA6Ba,GAAY,CAC1CtD,OAAO,SACPC,QAAS,CACL,cAAiB,UAAYf,aAAaiD,QAAQ,UAGzD9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAMkC,EAAUT,EAAKnB,KAAI,SAAAC,GACrB,OAAIA,EAAKC,MAAQR,EAAO+C,KAAKvC,IAClBR,EAAO+C,KAEPxC,KAGfmB,EAAQQ,MACThC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAmC8C,kBACiC,OAInF,0BAAM6C,SAAU,SAAC5D,GAhGzB,IAACwD,EAAML,EAiGKnD,EAAE6D,iBAjGbL,EAkGuBxD,EAAEE,OAAO,GAAGJ,MAlG7BqD,EAkGmChC,EAAKC,IAjG/DjB,MAAM,WAAW,CACbC,OAAO,MACPC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYf,aAAaiD,QAAQ,QAEtDjC,KAAMC,KAAKC,UAAU,CACjB2C,SACAK,WAEL/C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClBF,MAAK,SAAAG,GACF,IAAMkC,EAAUT,EAAKnB,KAAI,SAAAC,GACrB,OAAIA,EAAKC,MAAQR,EAAOQ,IACbR,EAEAO,KAGfmB,EAAQQ,MACThC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MA8EAf,EAAEE,OAAO,GAAGJ,MAAM,KAEtB,2BAAON,KAAK,OAAOK,YAAY,wBC7GhD6H,EAnDD,WACV,IAAMxJ,EAAUC,cADA,EAESV,mBAAS,IAFlB,mBAETwG,EAFS,KAEHC,EAFG,KA+BhB,OACI,yBAAKjF,UAAU,UACX,yBAAKA,UAAU,8BACf,+CACA,2BACAO,KAAK,OACLK,YAAY,QACZC,MAAOmE,EACPlE,SAAU,SAACC,GAAD,OAAKkE,EAASlE,EAAEE,OAAOJ,UAGjC,4BAAQb,UAAU,iCAClBI,QAAS,WAtCT,yJAAyJ8E,KAAKF,GAIlK9D,MAAM,kBAAmB,CACrBC,OAAO,OACPC,QAAQ,CACJ,eAAe,oBAEnBC,KAAKC,KAAKC,UAAU,CAChByD,YAELxD,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAA4B,GACCA,EAAK+B,MACJ5F,IAAE6F,MAAM,CAACC,KAAMjC,EAAK+B,MAAMG,QAAQ,0BAGlC/F,IAAE6F,MAAM,CAACC,KAAKjC,EAAKyE,QAAQvC,QAAQ,2BACnCrG,EAAQuB,KAAK,cAElBqB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MArBZvC,IAAE6F,MAAM,CAACC,KAAM,gBAAgBC,QAAQ,2BAoCvC,qBCOGoD,EAjDK,WAChB,IAAMzJ,EAAUC,cADM,EAESV,mBAAS,IAFlB,mBAEfsG,EAFe,KAENC,EAFM,KAGfS,EAASsB,cAATtB,MA0BP,OACI,yBAAKxF,UAAU,UACX,yBAAKA,UAAU,8BACf,+CACA,2BACAO,KAAK,WACLK,YAAY,qBACZC,MAAOiE,EACPhE,SAAU,SAACC,GAAD,OAAKgE,EAAYhE,EAAEE,OAAOJ,UAEpC,4BAAQb,UAAU,iCAClBI,QAAS,WAnCbc,MAAM,gBAAiB,CACnBC,OAAO,OACPC,QAAQ,CACJ,eAAe,oBAEnBC,KAAKC,KAAKC,UAAU,CAChBuD,WACAU,YAGLhE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAChBF,MAAK,SAAA4B,GACCA,EAAK+B,MACJ5F,IAAE6F,MAAM,CAACC,KAAMjC,EAAK+B,MAAMG,QAAQ,0BAGlC/F,IAAE6F,MAAM,CAACC,KAAKjC,EAAKuF,QAAQrD,QAAQ,2BACnCrG,EAAQuB,KAAK,cAElBqB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAcZ,sBCzCC8G,EAAW,SAAC7J,EAAM8J,GAC3B,MAAiB,SAAdA,EAAOtI,KACCsI,EAAOpD,QAED,UAAdoD,EAAOtI,KACC,KAEQ,WAAhBsI,EAAOtI,KACC,2BACAxB,GADP,IAEIwH,UAAUsC,EAAOpD,QAAQc,UACzBD,UAAUuC,EAAOpD,QAAQa,YAGd,cAAhBuC,EAAOtI,KACC,2BACAxB,GADP,IAEI4D,IAAIkG,EAAOpD,UAGZ1G,GCJED,EAAcgK,0BAErBC,EAAU,WACd,IAAM9J,EAAUC,cACTF,EAAYH,qBAAWC,GAAvBE,SAYP,OAVAG,qBAAU,WACR,IAAMyC,EAAON,KAAK0H,MAAM3I,aAAaiD,QAAQ,SACzC1B,EACF5C,EAAS,CAACuB,KAAK,OAAOkF,QAAQ7D,IAE1B3C,EAAQgK,SAASC,SAASC,WAAW,WACzClK,EAAQuB,KAAK,YAEd,IAGD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4I,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,YAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAACE,EAAD,OAEF,kBAAC,IAAD,CAAOF,KAAK,oBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,OApBJ,IAsBE,kBAAC,IAAD,CAAOA,KAAK,uBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,oBACV,kBAACG,EAAD,OAEF,kBAAC,IAAD,CAAOF,OAAK,EAACD,KAAK,UAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,SAkBOI,MAZf,WAAgB,IAAD,EACaC,qBAAWb,ED1EX,MCyEb,mBACN7J,EADM,KACCC,EADD,KAEb,OACE,kBAACF,EAAY4K,SAAb,CAAsB7I,MAAO,CAAE9B,QAAOC,aACpC,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCnEY2K,QACW,cAA7BC,OAAOX,SAASY,UAEe,UAA7BD,OAAOX,SAASY,UAEhBD,OAAOX,SAASY,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF5K,SAAS6K,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7I,MAAK,SAAA8I,GACJA,EAAaC,gBAEd1I,OAAM,SAAAsD,GACLpD,QAAQoD,MAAMA,EAAM0C,c","file":"static/js/main.795a88d9.chunk.js","sourcesContent":["import React, { useEffect, useContext, useRef, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../App';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst NavBar = () => {\r\n    const SearchModal = useRef(null)\r\n    const [search, setSearch] = useState()\r\n    const [userDetails, setUserDetails] = useState([])\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        let sidenav = document.querySelector('#slide-out');\r\n        M.Sidenav.init(sidenav, {});\r\n        var elems = document.querySelectorAll('.modal');\r\n        M.Modal.init(elems, {});\r\n    }, []);\r\n    const renderList = () => {\r\n        if (state) {\r\n            return [\r\n                <li key=\"1\"><i data-target=\"modal1\" className=\"material-icons modal-trigger nav-item \" style={{ color: \"black\" }}>search</i></li>,\r\n                <li key=\"2\"><Link to=\"/profile\">Profile</Link></li>,\r\n                <li key=\"3\"><Link to=\"/create\">Creat Post</Link></li>,\r\n                <li key=\"4\"><Link to=\"/myfollowingpost\">My Following Posts</Link></li>,\r\n                <li key=\"5\"><button className=\"btn #c62828 red darken-3\" \r\n                    onClick={() => {\r\n                        localStorage.clear();\r\n                        dispatch({ type: \"CLEAR\" })\r\n                        history.push('/login')\r\n                    }}>\r\n                    Logout\r\n                </button>\r\n                </li>\r\n            ];\r\n        } else {\r\n            return [\r\n                <li key=\"6\"><Link to=\"/signup\">Signup</Link></li>,\r\n                <li key=\"7\"><Link to=\"/login\">Login</Link></li>\r\n            ];\r\n        }\r\n    }\r\n\r\n    const fetchUsers = (query) => {\r\n        setSearch(query)\r\n        if(query){\r\n            fetch(\"/search-users\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    query\r\n                })\r\n            }).then(res => res.json())\r\n                .then(result => {\r\n                    setUserDetails(result.user)\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"nav-wrapper white\">\r\n                    <Link to={state ? \"/\" : \"/login\"} className=\"brand-logo left\">React Instagram</Link>\r\n                    <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger hide-on-med right\"><i className=\"material-icons\">menu</i></a>\r\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                        {renderList()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <ul id=\"slide-out\" className=\"sidenav\">\r\n                {renderList()}\r\n            </ul>\r\n            <div id=\"modal1\" className=\"modal\" ref={SearchModal} style={{ color: \"black\" }}>\r\n                <div className=\"modal-content\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search users by email\"\r\n                        value={search}\r\n                        onChange={(e) => fetchUsers(e.target.value)}\r\n                    />\r\n                    <ul className=\"collection\">\r\n                        {userDetails.map(item => {\r\n                            return (<Link key={item._id} to={item._id !== state._id ? `/profile/${item._id}` : \"/profile/\"}\r\n                                onClick={() => {\r\n                                    M.Modal.getInstance(SearchModal.current).close()\r\n                                    setSearch(\"\")\r\n                                }}>\r\n                                <li className=\"collection-item\">\r\n                                <img style={{ width: \"50px\", height: \"50px\", borderRadius: \"80px\" }}\r\n                                    src={item.pic} />\r\n                                <span style={{ display: \"inline-block\", position: \"relative\", bottom: \"15px\", left: \"10px\", }}>{item.name}</span>\r\n                                </li></Link>)\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"modal-close waves-effect waves-green btn-flat\" onClick={(e) => setSearch(\"\")}>Close</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"container center-align\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12\" style={{padding:\"20vw 0px\"}}>\r\n                    <div className=\"preloader-wrapper big active\">\r\n                        <div className=\"spinner-layer spinner-blue-only\">\r\n                            <div className=\"circle-clipper left\">\r\n                                <div className=\"circle\"></div>\r\n                            </div><div className=\"gap-patch\">\r\n                                <div className=\"circle\"></div>\r\n                            </div><div className=\"circle-clipper right\">\r\n                                <div className=\"circle\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from \"../../App\";\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from './Loader'\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([]);\r\n    const { state, dispatch } = useContext(UserContext);\r\n    useEffect(() => {\r\n        fetch('/allpost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result.posts)\r\n            })\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch('like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n    const makeComment = (text, postId) => {\r\n        fetch('/comment', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n    const deletePost = (postid) => {\r\n        fetch(`/deletepost/${postid}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.filter(item => {\r\n                    return item._id !== result._id\r\n                })\r\n                setData(newData)\r\n            }).catch(err => console.log(err))\r\n    }\r\n    const deleteComment = (postid, commentid) => {\r\n        fetch(`/deletecomment/${postid}/${commentid}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result.post._id) {\r\n                        return result.post;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.length == 0 ? <Loader /> :\r\n                data.map(item => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h5 style={{ padding: '5px' }}> <Link to={item.postedBy._id !== state._id ? `/profile/${item.postedBy._id}` : \"/profile/\"}>\r\n                                <img style={{ width: \"50px\", height: \"50px\", borderRadius: \"80px\" }}\r\n                                    src={item.postedBy.pic} alt= {item.postedBy.name+\" profile image\"}/>\r\n                                <span style={{ display: \"inline-block\", position: \"relative\", bottom: \"15px\", left: \"10px\", }}>{item.postedBy.name}</span>\r\n                            </Link>\r\n                                {item.postedBy._id == state._id && <i className=\"material-icons\" style={{ float: \"right\" }}\r\n                                    onClick={() => { deletePost(item._id) }}>delete_forever</i>}\r\n                                {item.postedBy._id == state._id && <Link to={`/updatepost/${item._id}`}><i className=\"material-icons\" style={{ float: \"right\" }}>settings</i></Link>}\r\n                            </h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo} alt={\"Post Image by \"+ item.postedBy.name}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                {item.likes.includes(state._id)\r\n                                    ? <i className=\"material-icons\" style={{ color: \"red\" }}\r\n                                        onClick={() => { unlikePost(item._id) }}>favorite</i>\r\n                                    : <i className=\"material-icons\" style={{ color: \"red\" }}\r\n                                        onClick={() => { likePost(item._id) }}>favorite_border</i>\r\n                                }\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6><b>{item.title}</b></h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(comment => {\r\n                                        return (<h6 key={comment._id}>\r\n                                            <span style={{ fontWeight: \"500\" }}>{comment.postedBy.name}</span> {comment.text}\r\n                                            { comment.postedBy._id == state._id ? <i className=\"material-icons\" style={{ cursor: \"pointer\", float: \"right\" }}\r\n                                                onClick={() => { deleteComment(item._id, comment._id) }}>delete_forever</i> : \"\"}\r\n                                        </h6>)\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e) => {\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                    e.target[0].value = \"\"\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"add comment\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React,{useState,useContext} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../../App'\r\nimport M from 'materialize-css'; \r\n\r\nconst Login = () => {\r\n    const {state,dispatch} = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [password,setPassword] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const PostData =()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"Invalid Email\",classes:\"#c62828 red darken-3\"});\r\n            return;\r\n        }\r\n        fetch(\"/sigin\" ,{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n                \r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"});\r\n            }\r\n            else{\r\n                localStorage.setItem(\"jwt\",data.token)\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                dispatch({type:\"USER\",payload:data.user})\r\n                M.toast({html:\"signedin success\",classes:\"#43a047 green darken-1\"});\r\n                history.push('/');\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n            <h2>React Instagram</h2>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input \r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=>setPassword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect blue draken-1\"\r\n            onClick={()=>PostData()}>\r\n                Login\r\n            </button>\r\n            <h5>\r\n                <Link to=\"/signup\"> Don't have an account ?</Link>\r\n            </h5>\r\n            <h6>\r\n                <Link to=\"/reset\"> Forget Password ?</Link>\r\n            </h6>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n    const [mypics, setPics] = useState([]);\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const [image, setImage] = useState(\"\");\r\n    useEffect(() => {\r\n        fetch(\"/mypost\", {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                setPics(result.mypost);\r\n            });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (image) {\r\n            const data = new FormData();\r\n            data.append(\"file\", image);\r\n            data.append(\"upload_preset\", \"insta-clone\");\r\n            data.append(\"cloud_name\", \"eslam-cloud\");\r\n            fetch(\"\thttps://api.cloudinary.com/v1_1/eslam-cloud/image/upload\", {\r\n                method: \"post\",\r\n                body: data,\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    fetch(\"/updatepic\", {\r\n                        method: \"put\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                        },\r\n                        body: JSON.stringify({\r\n                            pic: data.url,\r\n                        }),\r\n                    })\r\n                        .then((res) => res.json())\r\n                        .then((result) => {\r\n                            localStorage.setItem(\"user\", JSON.stringify({ ...state, pic: result.pic }))\r\n                            dispatch({ type: \"UPDATEPIC\", payload: result.pic })\r\n                        });\r\n                })\r\n\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [image]);\r\n\r\n    const updatePhoto = (file) => {\r\n        setImage(file);\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <div style={{ margin: \"18px 0px\", borderBottom: \"1px solid grey\" }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col s2\"></div>\r\n                    <div className=\"col m2 s12 center-align\">\r\n                        <img\r\n                            className=\"circle responsive-img\"\r\n                            width=\"100%\"\r\n                            src={state ? state.pic : \"\"}\r\n                            alt={state.name + \" Picture\"}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col m8 s12 \">\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12\">\r\n                                <h4>{state ? state.name : \"loading\"}</h4>\r\n\r\n                            </div>\r\n                            <div className=\"col s12\">\r\n                                <h6>{state ? state.email : \"loading\"}</h6>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"col m3 s4\">\r\n                                <h6>{mypics ? mypics.length : 0} posts</h6>\r\n                            </div>\r\n                            <div className=\"col m3 s4\">\r\n                                <h6>{state ? state.followers.length : 0} followers</h6>\r\n                            </div>\r\n                            <div className=\"col m3 s4\">\r\n                                <h6>{state ? state.following.length : 0} following</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                \r\n                </div>\r\n\r\n                <div className=\"file-field input-field\" style={{ margin: \"10px\" }}>\r\n                    <div className=\"btn blue draken-1\">\r\n                        <span>Update Pic</span>\r\n                        <input\r\n                            type=\"file\"\r\n                            onChange={(e) => updatePhoto(e.target.files[0])}\r\n                        />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row center-align\">\r\n                {mypics.map((item) => {\r\n                    return (\r\n                        <div className=\"col m4 s12\" key={item._id} >\r\n                            <Link to={`/post/${item._id}`} >\r\n                            <img\r\n                                className=\"responsive-img\"\r\n                                src={item.photo}\r\n                                alt={item.title}\r\n                            />\r\n                        </Link>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { UserContext } from '../../App';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Loader from './Loader'\r\n\r\nconst UserProfile = () => {\r\n    const [userProfile, setProfile] = useState(null);\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const { userid } = useParams();\r\n    const [showfollow, setShowFollow] = useState(state ? !state.following.includes(userid) : true);\r\n\r\n    useEffect(() => {\r\n        fetch(`/user/${userid}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setProfile(result)\r\n            })\r\n    }, [])\r\n\r\n    const followUser = () => {\r\n        fetch(`/follow`, {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ followId: userid })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                dispatch({ type: \"UPDATE\", payload: { following: data.following, followers: data.followers } })\r\n                localStorage.setItem(\"user\", JSON.stringify(data))\r\n                setProfile((prevState) => {\r\n                    return {\r\n                        ...prevState,\r\n                        user: {\r\n                            ...prevState.user,\r\n                            followers: [...prevState.user.followers, data._id]\r\n                        }\r\n                    }\r\n                })\r\n                setShowFollow(false)\r\n            })\r\n    }\r\n\r\n    const unfollowUser = () => {\r\n        fetch(`/unfollow`, {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ unfollowId: userid })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                dispatch({ type: \"UPDATE\", payload: { following: data.following, followers: data.followers } })\r\n                localStorage.setItem(\"user\", JSON.stringify(data))\r\n                setProfile((prevState) => {\r\n                    const newFollower = prevState.user.followers.filter(item => item !== data._id)\r\n                    return {\r\n                        ...prevState,\r\n                        user: {\r\n                            ...prevState.user,\r\n                            followers: newFollower\r\n                        }\r\n                    }\r\n                })\r\n                setShowFollow(true)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            {userProfile ?\r\n                <div className=\"container\">\r\n                    <div style={{ margin: \"18px 0px\", borderBottom: \"1px solid grey\" }}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s2\"></div>\r\n                            <div className=\"col m2 s12 center-align\">\r\n                                <img className=\"circle responsive-img\" width=\"100%\"\r\n                                    src={userProfile.user.pic} alt={userProfile.user.name + \" Picture\"} />\r\n                            </div>\r\n                            <div className=\"col m8 s12 \">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col s12\">\r\n                                        <h4>{userProfile.user.name}</h4>\r\n\r\n                                    </div>\r\n                                    <div className=\"col s12\">\r\n                                        <h6>{userProfile.user.email}</h6>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"col m3 s4\">\r\n                                        <h6>{userProfile.posts.length} posts</h6>\r\n                                    </div>\r\n                                    <div className=\"col m3 s4\">\r\n                                        <h6>{userProfile.user.followers.length} followers</h6>\r\n                                    </div>\r\n                                    <div className=\"col m3 s4\">\r\n                                        <h6>{userProfile.user.following.length} following</h6>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col s12\">\r\n                                    {showfollow ?\r\n                                        <button style={{ margin: \"10px\" }} className=\"btn waves-effect blue draken-1\"\r\n                                            onClick={() => followUser()}>\r\n                                            follow\r\n                            </button> :\r\n                                        <button style={{ margin: \"10px\" }} className=\"btn waves-effect blue draken-1\"\r\n                                            onClick={() => unfollowUser()}>\r\n                                            Unfollow\r\n                            </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row center-align\">\r\n                        {\r\n                            userProfile.posts.map(item => {\r\n                                return (\r\n                                    <div className=\"col m4 s12\" key={item._id} >\r\n                                        <Link to={`/post/${item._id}`} >\r\n                                            <img\r\n                                                className=\"responsive-img\"\r\n                                                src={item.photo}\r\n                                                alt={item.title}\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                : <Loader />}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from \"../../App\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from './Loader'\r\n\r\nconst ViewPost = () => {\r\n    const [data, setData] = useState(null);\r\n    const { postid } = useParams();\r\n    const { state, dispatch } = useContext(UserContext);\r\n    useEffect(() => {\r\n        fetch(`/post/${postid}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result.post);\r\n            })\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result)\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result)\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n    const makeComment = (text, postId) => {\r\n        fetch('/comment', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result)\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n    const deletePost = (postid) => {\r\n        fetch(`/deletepost/${postid}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setData(result)\r\n            }).catch(err => console.log(err))\r\n    }\r\n    const deleteComment = (postid, commentid) => {\r\n        fetch(`/deletecomment/${postid}/${commentid}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setData(result)\r\n            }).catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <>\r\n        {data?\r\n        <div className=\"home\">\r\n            {\r\n                <div className=\"card home-card\">\r\n                    <h5 style={{ padding: '5px' }}> <Link to={data.postedBy._id !== state._id ? `/profile/${data.postedBy._id}` : \"/profile/\"}>\r\n                        <img style={{ width: \"50px\", height: \"50px\", borderRadius: \"80px\" }}\r\n                            src={data.postedBy.pic} />\r\n                        <span style={{ display: \"inline-block\", position: \"relative\", bottom: \"15px\", left: \"10px\", }}>{data.postedBy.name}</span>\r\n                    </Link>\r\n                    {data.postedBy._id == state._id && <i className=\"material-icons\" style={{ float: \"right\" }}\r\n                            onClick={() => { deletePost(data._id) }}>delete_forever</i>}\r\n                    {data.postedBy._id == state._id && <Link to={`/updatepost/${data._id}`}><i className=\"material-icons\" style={{ float: \"right\" }}>settings</i></Link>}\r\n                        \r\n                    </h5>\r\n                    <div className=\"card-image\">\r\n                        <img src={data.photo} />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        \r\n                        {data.likes.includes(state._id)\r\n                            ? <i className=\"material-icons\" style={{ color: \"red\" }}\r\n                                onClick={() => { unlikePost(data._id) }}>favorite</i>\r\n                            : <i className=\"material-icons\" style={{ color: \"red\" }}\r\n                                onClick={() => { likePost(data._id) }}>favorite_border</i>\r\n                        }\r\n                        <h6>{data.likes.length} likes</h6>\r\n                        <h6><b>{data.title}</b></h6>\r\n                        <p>{data.body}</p>\r\n                        {\r\n                            data.comments.map(comment => {\r\n                                return (<h6 key={comment._id}>\r\n                                    <span style={{ fontWeight: \"500\" }}>{comment.postedBy.name}</span> {comment.text}\r\n                                    { comment.postedBy._id == state._id ? <i className=\"material-icons\" style={{ cursor: \"pointer\", float: \"right\" }}\r\n                                        onClick={() => { deleteComment(data._id, comment._id) }}>delete_forever</i> : \"\"}\r\n                                </h6>)\r\n                            })\r\n                        }\r\n                        <form onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            makeComment(e.target[0].value, data._id)\r\n                            e.target[0].value = \"\"\r\n                        }}>\r\n                            <input type=\"text\" placeholder=\"add comment\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n        :<Loader />}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewPost;","import React,{useState, useEffect} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css'; \r\n\r\nconst Signup = () => {\r\n    const history = useHistory();\r\n    const [name,setName] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [image,setImage] = useState(\"\");\r\n    const [url,setUrl] = useState(undefined);\r\n    useEffect(()=>{\r\n        if(url){\r\n            uploadFiels();\r\n        }\r\n    },[url])\r\n    const uploadPic = ()=>{\r\n            const data = new FormData();\r\n            data.append(\"file\",image)\r\n            data.append(\"upload_preset\",\"insta-clone\")\r\n            data.append(\"cloud_name\",\"eslam-cloud\")\r\n            fetch(\"\thttps://api.cloudinary.com/v1_1/eslam-cloud/image/upload\",{\r\n                method:\"post\",\r\n                body:data\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const uploadFiels = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"Invalid Email\",classes:\"#c62828 red darken-3\"});\r\n            return;\r\n        }\r\n        fetch(\"/signup\" ,{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic:url\r\n                \r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"});\r\n            }\r\n            else{\r\n                M.toast({html:data.message,classes:\"#43a047 green darken-1\"});\r\n                history.push('/login');\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const PostData =()=>{\r\n        if(image){\r\n            uploadPic(); \r\n        }else{\r\n            uploadFiels();\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n            <h2>React Instagram</h2>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"name\"\r\n            value={name}\r\n            onChange={(e)=>setName(e.target.value)}\r\n            />\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input \r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=>setPassword(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn blue draken-1\">\r\n                    <span>Upload Pic</span>\r\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect blue draken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n                SignUp\r\n            </button>\r\n            <h5>\r\n                <Link to=\"/login\"> Already have an account ?</Link>\r\n            </h5>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React, { useState , useEffect} from \"react\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css'; \r\n\r\nconst CreatPost = () => {\r\n    const history = useHistory();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [url,setUrl] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n            fetch(\"/createpost\" ,{\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n                },\r\n                body:JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                    \r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                if(data.error){\r\n                    M.toast({html: data.error,classes:\"#c62828 red darken-3\"});\r\n                }\r\n                else{\r\n                    M.toast({html:\"Created Post Successfully\",classes:\"#43a047 green darken-1\"});\r\n                    history.push('/');\r\n                }\r\n            }).catch(err=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n    },[url])\r\n\r\n    const postDetails = ()=>{\r\n        const data = new FormData();\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"insta-clone\")\r\n        data.append(\"cloud_name\",\"eslam-cloud\")\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/eslam-cloud/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    return (\r\n        <div\r\n            className=\"card input-filed\"\r\n            style={{\r\n                margin: \"30px auto\",\r\n                maxWidth: \"500px\",\r\n                padding: \"20px\",\r\n                textAlign: \"center\",\r\n            }}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"body\"\r\n                value={body}\r\n                onChange={(e) => setBody(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn blue draken-1\">\r\n                    <span>Upload Image</span>\r\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect blue draken-1\" onClick={()=>postDetails()}>Submit Post</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatPost; \r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst UpdatePost = () => {\r\n    const history = useHistory();\r\n    const { postid } = useParams();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [updateClick, setupdateClick] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch(`/post/${postid}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setTitle(result.post.title);\r\n                setBody(result.post.body);\r\n                setUrl(result.post.photo);\r\n\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (updateClick) {\r\n            fetch(`/updatepost/${postid}`, {\r\n                method: \"put\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic: url\r\n\r\n                })\r\n            }).then(res => res.json())\r\n                .then(data => {\r\n                    if (data.error) {\r\n                        M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\r\n                    }\r\n                    else {\r\n                        M.toast({ html: \"Post Update Successfully\", classes: \"#43a047 green darken-1\" });\r\n                        history.push(`/post/${postid}`);\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }, [updateClick])\r\n\r\n    const postDetails = () => {\r\n        const data = new FormData();\r\n        data.append(\"file\", image)\r\n        data.append(\"upload_preset\", \"insta-clone\")\r\n        data.append(\"cloud_name\", \"eslam-cloud\")\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/eslam-cloud/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setUrl(data.url)\r\n                setupdateClick(true)\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div\r\n            className=\"card input-filed\"\r\n            style={{\r\n                margin: \"30px auto\",\r\n                maxWidth: \"500px\",\r\n                padding: \"20px\",\r\n                textAlign: \"center\",\r\n            }}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"body\"\r\n                value={body}\r\n                onChange={(e) => setBody(e.target.value)}\r\n            />\r\n            <div className=\"card home-card\">\r\n                <div className=\"card-image\">\r\n                    <img src={url} alt=\"Post Image\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn blue draken-1\">\r\n                    <span>Upload Image</span>\r\n                    <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect blue draken-1\" onClick={() => postDetails()}>Update Post</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdatePost; \r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from \"../../App\";\r\nimport{Link} from 'react-router-dom';\r\nconst Home = () => {\r\n    const [data, setData] = useState([]);\r\n    const {state} = useContext(UserContext);\r\n    useEffect(() => {\r\n        fetch('/getsubpost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result.posts);\r\n            })\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch('like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    } else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n    const makeComment = (text, postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            const newData = data.map(item => {\r\n                if (item._id === result._id) {\r\n                    return result;\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    const deletePost =(postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        }).catch(err => console.log(err))\r\n    }\r\n    const deleteComment =(postid,commentid)=>{\r\n        fetch(`/deletecomment/${postid}/${commentid}`,{\r\n            method:\"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            const newData = data.map(item => {\r\n                if (item._id === result.post._id) {\r\n                    return result.post;\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <div className=\"home\">\r\n            { data.length === 0 ? <h2 style={{margin:\"1%\"}}>please follow some one to show his posts</h2> :\r\n                data.map(item => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h5 style={{padding:'5px'}}> <Link to={item.postedBy._id !== state._id ?`/profile/${item.postedBy._id}`:\"/profile/\"}>\r\n                            <img style={{ width: \"50px\", height: \"50px\", borderRadius: \"80px\" }}\r\n                                src={item.postedBy.pic} alt= {item.postedBy.name+\" profile image\"}/>\r\n                                <span style={{display:\"inline-block\", position: \"relative\", bottom: \"15px\", left: \"10px\",}}>{item.postedBy.name}</span>\r\n                                </Link> \r\n                            {item.postedBy._id === state._id && <i className=\"material-icons\" style={{float:\"right\"}}\r\n                                        onClick={() => { deletePost(item._id) }}>delete_forever</i>}\r\n                                {item.postedBy._id === state._id && <Link to={`/updatepost/${item._id}`}><i className=\"material-icons\" style={{ float: \"right\" }}>settings</i></Link>}\r\n\r\n                            </h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo} alt={\"Post Image by \"+ item.postedBy.name}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            {item.likes.includes(state._id)\r\n                                    ? <i className=\"material-icons\" style={{ color: \"red\" }}\r\n                                        onClick={() => { unlikePost(item._id) }}>favorite</i>\r\n                                    : <i className=\"material-icons\" style={{ color: \"red\" }}\r\n                                        onClick={() => { likePost(item._id) }}>favorite_border</i>\r\n                                }\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6><b>{item.title}</b></h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(comment=>{\r\n                                        return(<h6 key={comment._id}>\r\n                                            <span style={{fontWeight:\"500\"}}>{comment.postedBy.name}</span> {comment.text}\r\n                                            { comment.postedBy._id === state._id ?<i className=\"material-icons\" style={{ cursor: \"pointer\" ,float:\"right\"}}\r\n                                        onClick={() => { deleteComment(item._id,comment._id) }}>delete_forever</i>:\"\"}\r\n                                        </h6>)\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                    e.target[0].value=\"\"\r\n                                }}>\r\n                                <input type=\"text\" placeholder=\"add comment\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React,{useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css'; \r\n\r\nconst Reset = () => {\r\n    const history = useHistory();\r\n    const [email,setEmail] = useState(\"\");\r\n\r\n    const ResetPassword =()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"Invalid Email\",classes:\"#c62828 red darken-3\"});\r\n            return;\r\n        }\r\n        fetch(\"/reset-password\" ,{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"});\r\n            }\r\n            else{\r\n                M.toast({html:data.message,classes:\"#43a047 green darken-1\"});\r\n                history.push('/login');\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n            <h2>React Instagram</h2>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            \r\n            <button className=\"btn waves-effect blue draken-1\"\r\n            onClick={()=>ResetPassword()}>\r\n                Reset password\r\n            </button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset;","import React,{useState} from 'react';\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport M from 'materialize-css'; \r\n\r\nconst NewPassword = () => {\r\n    const history = useHistory();\r\n    const [password,setPassword] = useState(\"\");\r\n    const {token} = useParams()\r\n    const PostData =()=>{\r\n        fetch(\"/new-password\" ,{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                token\r\n                \r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"});\r\n            }\r\n            else{\r\n                M.toast({html:data.massage,classes:\"#43a047 green darken-1\"});\r\n                history.push('/login');\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n            <h2>React Instagram</h2>\r\n            <input \r\n            type=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            value={password}\r\n            onChange={(e)=>setPassword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect blue draken-1\"\r\n            onClick={()=>PostData()}>\r\n            Update Password\r\n            </button>\r\n\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPassword;","export const initialState = null;\r\n\r\nexport const reducer  = (state,action)=>{\r\n    if(action.type===\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type===\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type === \"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            following:action.payload.following,\r\n            followers:action.payload.followers,\r\n        }\r\n    }\r\n    if(action.type === \"UPDATEPIC\"){\r\n        return {\r\n            ...state,\r\n            pic:action.payload,\r\n        }\r\n    }\r\n    return state;\r\n}","import React, { useEffect, createContext, useReducer ,useContext} from \"react\";\r\nimport NavBar from \"./components/Navbar\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Home from \"./components/screens/Home\";\r\nimport Login from \"./components/screens/Login\";\r\nimport Profile from \"./components/screens/Profile\";\r\nimport UserProfile from \"./components/screens/UserProfile\";\r\nimport ViewPost from \"./components/screens/ViewPost\";\r\nimport Signup from \"./components/screens/Signup\";\r\nimport CreatePost from \"./components/screens/CreatePost\";\r\nimport UpdatePost from \"./components/screens/UpdatePost\";\r\nimport SubscribesUserPosts from \"./components/screens/SubscribesUserPosts\";\r\nimport Reset from \"./components/screens/Reset\";\r\nimport NewPassword from \"./components/screens/NewPassword\";\r\n\r\nimport { reducer, initialState } from \"./reducers/userReducer\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst Routing = () => {\r\n  const history = useHistory();\r\n  const {dispatch} = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user) {\r\n      dispatch({type:\"USER\",payload:user})\r\n    } else {\r\n      if(!history.location.pathname.startsWith('/reset')) \r\n      history.push(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <Home />\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route exact path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n      <Route path=\"/signup\">\r\n        <Signup />\r\n      </Route>\r\n      <Route path=\"/create\">\r\n        <CreatePost />\r\n      </Route>\r\n      <Route path=\"/profile/:userid\">\r\n        <UserProfile />\r\n      </Route>\r\n      <Route path=\"/post/:postid\">\r\n        <ViewPost />\r\n      </Route>.\r\n      <Route path=\"/updatepost/:postid\">\r\n        <UpdatePost />\r\n      </Route>\r\n      <Route path=\"/myfollowingpost\">\r\n        <SubscribesUserPosts />\r\n      </Route>\r\n      <Route exact path=\"/reset\">\r\n        <Reset />\r\n      </Route>\r\n      <Route path=\"/reset/:token\">\r\n        <NewPassword />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <UserContext.Provider value={{ state, dispatch }}>\r\n      <BrowserRouter>\r\n        <NavBar />\r\n        <Routing />\r\n      </BrowserRouter>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}